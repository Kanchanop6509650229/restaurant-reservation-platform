# Application name and port
spring.application.name=restaurant-service
server.port=8082

# Database Configuration - Updated for MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/restaurant_service
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=restaurant-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Logging levels
logging.level.org.springframework=INFO
logging.level.com.restaurant=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Security - JWT Configuration if needed
jwt.secret=yourSecretKeyHereMakeItLongEnoughForSecurity
jwt.expiration=86400000
jwt.header=Authorization
jwt.prefix=Bearer

# Restaurant Service specific properties
restaurant.image.uploadPath=/opt/restaurant-platform/uploads/restaurant-images
restaurant.default.open-time=10:00
restaurant.default.close-time=22:00